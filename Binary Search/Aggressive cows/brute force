#include <bits/stdc++.h>
using namespace std;
// brute force
bool canWePlace(int n, /* vector<int> &arr */ int arr[], int dist, int cows)
{
    int cntCows = 1;   // no. of cows
    int last = arr[0]; // position of last cow.
    for (int i = 1; i < n; i++)
    {
        if (arr[i] - last >= dist)
        {
            cntCows++;     // increasing count
            last = arr[i]; // update the last location.
        }
        if (cntCows >= cows)
        {
            return true;
        }
    }
    return false;
}
int aggressiveCows(int n, /* vector<int> & arr */ int arr[], int k)
{
    // sort(arr.begin(), arr.end());
    sort(arr, arr + n);
    int dist = arr[n - 1] - arr[0];
    for (int i = 1; i <= dist; i++)
    {
        if (canWePlace(n, arr, i, k) == false)
        {
            return (i - 1);
        }
    }
    return dist;
}
int main()
{
    int n, k;
    cout << "Enter the size of array -> ";
    cin >> n;
    int arr[n];
    cout << "Enter the elements of the array -> ";
    for (int i = 0; i < n; i++)
    {
        cin >> arr[i];
    }
    cout << "Enter the target -> ";
    cin >> k;
    int ans = aggressiveCows(n, arr, k);
    cout << "The maximum possible minimum distance is: " << ans;
    return 0;
}
