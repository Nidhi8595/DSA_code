class Solution {
public:
    bool Solve(int *arr, int &index, int mini, int maxi, int &n, vector<int> &ans) {
        if (index >= n) {
            return false;
        }

        // Out of range so, return false
        if (arr[index] < mini || arr[index] > maxi) {
            return false;
        }

        int root = arr[index++];

        bool left = Solve(arr, index, mini, root, n, ans);
        bool right = Solve(arr, index, root, maxi, n, ans);

        // If both returns false then it means it is a Leaf Node
        if (!left && !right) {
            ans.push_back(root);
        }

        // If there is a root then return true
        return true;
    }

    vector<int> leafNodes(int arr[], int N) {
        vector<int> ans;
        int maxi = INT_MAX;
        int mini = INT_MIN;
        int index = 0;
        Solve(arr, index, mini, maxi, N, ans);
        return ans;
    }
};
