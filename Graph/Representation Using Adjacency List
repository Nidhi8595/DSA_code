#include <bits/stdc++.h>

// Representing graph using Adjacency List

// T.C. -> O(2*m)
// S.C. -> O(2*m)

using namespace std;

vector<vector<int>> AdjacencyList(int n, int m)
{
    // Adjacency List
    vector<vector<int>> adj(n + 1);

    for (int i = 0; i < m; i++)
    {
        int u, v;
        cout << "Enter the nodes for edge " << i + 1 << " -> " << endl;
        cin >> u >> v;

        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    return adj;
}

void printGraph(const vector<vector<int>> &adjList, int n)
{
    cout << "Adjacency List :- " << endl;
    for (int i = 1; i <= n; i++)
    {
        cout << i << ": ";
        for (auto node : adjList[i])
        {
            cout << node << " ";
        }
        cout << endl;
    }
}

int main()
{
    int n, m;

    cout << "Enter the number of nodes & edges -> " << endl;
    cin >> n >> m;

    vector<vector<int>> adjList = AdjacencyList(n, m);

    printGraph(adjList, n);

    return 0;
}
