#include <bits/stdc++.h>

// Representing graph using Adjacency Matrix

// T.C. -> O(N)
// S.C. -> O(N^2)

using namespace std;

vector<vector<int>> AdjacentMat(int n, int m)
{
    // Adjacency matrix
    vector<vector<int>> adj(n + 1, vector<int>(n + 1, 0));

    for (int i = 0; i < m; i++)
    {
        int u, v;
        cout << "Enter the nodes for edge " << i << " -> " << endl;
        cin >> u >> v;

        // Mark the edge in the adjacency matrix
        adj[u][v] = 1;
        adj[v][u] = 1; // for undirected graph
    }

    return adj;
}

void printGraph(vector<vector<int>> adjMatrix, int m)
{
    cout << "Adjacency Matrix:" << endl;

    for (int i = 0; i < m; i++)
    {
        for (int j = 0; j < m; j++)
        {
            cout << adjMatrix[i][j] << " ";
        }

        cout << endl;
    }
}

int main()
{
    int n, m;

    cout << "Enter the number of nodes & edges -> " << endl;
    cin >> n >> m;

    vector<vector<int>> adjMatrix = AdjacentMat(n, m);

    printGraph(adjMatrix, m);

    return 0;
}
