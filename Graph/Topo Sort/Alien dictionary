#include <bits/stdc++.h>
using namespace std;

// Kahn's Algorithm
vector<int> topoSort(int V, vector<vector<int>> &adj)
{
    vector<int> indegree(V, 0);

    // indegree of each node
    for (int i = 0; i < V; i++)
    {
        for (auto it : adj[i])
        {
            indegree[it]++;
        }
    }

    queue<int> q;

    for (int i = 0; i < V; i++)
    {
        if (indegree[i] == 0)
        {
            q.push(i);
        }
    }

    vector<int> topo;
    while (!q.empty())
    {
        int node = q.front();
        q.pop();

        topo.push_back(node);

        for (auto it : adj[node])
        {

            indegree[it]--;
            if (indegree[it] == 0)
            {
                q.push(it);
            }
        }
    }

    return topo;
}

string findOrder(string dict[], int N, int K)
{
    vector<vector<int>> adj(K);

    for (int i = 0; i < N - 1; i++)
    {
        string s1 = dict[i];
        string s2 = dict[i + 1];

        int len = min(s1.size(), s2.size());

        for (int ptr = 0; ptr < len; ptr++)
        {
            if (s1[ptr] != s2[ptr])
            {

                adj[s1[ptr] - 'a'].push_back(s2[ptr] - 'a');
                break;
            }
        }
    }

    // Perform topological sort on the graph to get the order of characters
    vector<int> topo = topoSort(K, adj);

    string ans = "";

    for (auto it : topo)
    {
        ans += char(it + 'a');
    }

    return ans;
}

int main()
{
    int n, k;

    cout << "Enter the number of words and number of distinct characters :- ";
    cin >> n >> k;

    string dict[n];
    cout << "Enter the words in the alien language :- " << endl;
    for (int i = 0; i < n; i++)
    {
        cin >> dict[i];
    }

    string ans = findOrder(dict, n, k);

    cout << "The correct order of characters is will be as ->  " << ans << endl;
    return 0;
}
