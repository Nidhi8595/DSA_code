#include <bits/stdc++.h>
using namespace std;

// Detect a loop in given Linked List
// Optimal approach
// using two pointers

// T.C. -> O(N)
// S.C. -> O(1)

class Node
{
public:
    int data;   // to store value
    Node *next; /* since we will store the address of next node
    thats why we are declaring a pointer of datatype "Node" */
public:
    /* now we will define constructor to create objects of
    datatype "Node" */
    Node(int data1, Node *next1)
    {
        data = data1;
        next = next1;
    }
    Node(int data1) // second constructor
    {
        data = data1;
        next = nullptr;
    }
};

bool detect(Node *head)
{
    Node *slow = head;
    Node *fast = head;

    while (fast != nullptr && fast->next != nullptr)
    {
        slow = slow->next;       // one step at a time
        fast = fast->next->next; // move two steps at a time
        if (slow == fast)
        {
            return true;
        }
    }
    return false; // no loop detected
}

int main()
{
    Node *head = new Node(9);
    Node *second = new Node(8);
    Node *third = new Node(7);
    Node *fourth = new Node(6);

    head->next = second;
    second->next = third;
    third->next = fourth;
    fourth->next = second; // cycle

    if (detect(head))
    {
        cout << "Loop present" << endl;
    }
    else
    {
        cout << "Loop is not present" << endl;
    }

    return 0;
}
