#include <bits/stdc++.h>
using namespace std;

// Finding the starting point of a loop in given Linked List
// Brute force approach
// using hashmap

// T.C. -> O(N)
// S.C. -> O(N)

class Node
{
public:
    int data;   // to store value
    Node *next; /* since we will store the address of next node
    thats why we are declaring a pointer of datatype "Node" */
public:
    /* now we will define constructor to create objects of
    datatype "Node" */
    Node(int data1, Node *next1)
    {
        data = data1;
        next = next1;
    }
    Node(int data1) // second constructor
    {
        data = data1;
        next = nullptr;
    }
};

Node *detect(Node *head)
{
    Node *temp = head;
    unordered_map<Node *, int> map;

    while (temp != nullptr)
    {
        if (map.count(temp) != 0) // already present
        {
            return temp;
        }
        map[temp] = 1;
        temp = temp->next;
    }

    return nullptr; // since no loop present
}

int main()
{
    Node *head = new Node(9);
    Node *second = new Node(8);
    Node *third = new Node(7);
    Node *fourth = new Node(6);

    head->next = second;
    second->next = third;
    third->next = fourth;
    fourth->next = second; // cycle
    Node *Start = detect(head);

    if (Start)
    {
        cout << "Starting node of the loop is the one having value -> " << Start->data << endl;
    }
    else
    {
        cout << "No loop is present" << endl;
    }

    return 0;
}
