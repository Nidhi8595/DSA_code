#include <bits/stdc++.h>
using namespace std;
// deleting kth node

class Node
{
public:
    int data;   // to store value
    Node *next; /* since we will store the address of next node
    thats why we are declaring a pointer of datatype "Node" */
public:
    /* now we will define constructor to create objects of class Node */
    Node(int data1, Node *next1)
    {
        data = data1;
        next = next1;
    }
    Node(int data1) // second constructor
    {
        data = data1;
        next = nullptr;
    }
};

Node *convert(int n, int arr[])
{
    Node *head = new Node(arr[0]); // creting first node
    Node *move = head;             // initially will point to head pointer
    for (int i = 1; i < n; i++)
    {
        Node *temp = new Node(arr[i]); // creating other nodes
        move->next = temp;             // now move points to new temporary node we have created
        move = temp;                   // or move=move->next;// now move pointer moves to next node
    }
    return head; // returning the address of first node of Linked list we have created
}

void print(Node *temp)
{
    cout << "The elements in the Linked List are -> ";
    while (temp != NULL)
    {
        cout << temp->data << " ";
        temp = temp->next;
    }
    cout << endl;
}

Node *deleteposition(Node *head, int k)
{
    if (head == nullptr) // empty
    {
        return head;
    }
    if (k == 1) // head
    {
        Node *temp = head;
        head = head->next;
        delete temp;
        return head;
    }
    int cnt = 0;          // initialize counter to keep track of nodes
    Node *temp = head;    // starting traversing from head
    Node *prev = nullptr; // to store current Node before moving to next
    while (temp != nullptr)
    {
        cnt++;
        if (cnt == k)
        {
            prev->next = prev->next->next;
            delete temp;
            break;
        }
        prev = temp;
        temp = temp->next;
    }
    return head;
}

int main()
{
    int n;
    cout << "Enter the no. of elements -> ";
    cin >> n;
    int arr[n];
    cout << "Enter the elements -> ";
    for (int i = 0; i < n; i++)
    {
        cin >> arr[i];
    }
    Node *head = convert(n, arr); // address of Linked List

    print(head);
    int k;
    cout << "Enter the Node you want to delete -> ";
    cin >> k;
    cout << "After deleting " << k << "th Node :- " << endl;
    head = deleteposition(head, k);
    print(head);
}
