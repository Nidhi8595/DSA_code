#include <bits/stdc++.h>
using namespace std;

class Node
{
public:
    int data;   // to store value
    Node *next; /* since we will store the address of next node
    thats why we are declaring a pointer of datatype "Node" */
public:
    /* now we will define constructor to create objects of
    datatype "Node" */
    Node(int data1, Node *next1)
    {
        data = data1;
        next = next1;
    }
    Node(int data1) // second constructor
    {
        data = data1;
        next = nullptr;
    }
};

Node *convert(int n, int arr[])
{
    Node *head = new Node(arr[0]); // creting first node
    Node *move = head;             // initially will point to head pointer
    for (int i = 1; i < n; i++)
    {
        Node *temp = new Node(arr[i]); // creating other nodes
        move->next = temp;             // now move points to new temporary node we have created
        move = temp;                   // or move=move->next;// now move pointer moves to next node
    }
    return head; // returning the address of first node of Linked list we have created
}

pair<int, int> search(Node *head, int element)
{
    Node *temp = head;
    int cnt = 1; // starting from first node
    while (temp)
    {
        if (temp->data == element)
        {
            return make_pair(1, cnt);
        }
        temp = temp->next;
        cnt++;
    }
    return make_pair(0, 0); // element not found
}

int main()
{
    int n;
    cout << "Enter the no. of elements -> ";
    cin >> n;
    int arr[n];
    cout << "Enter the elements -> ";
    for (int i = 0; i < n; i++)
    {
        cin >> arr[i];
    }
    Node *head = convert(n, arr); // address of Linked List
    int t;
    cout << "Enter an element you want to search -> ";
    cin >> t;
    pair<int, int> ans = search(head, t);
    if (ans.first == 1)
    {
        cout << t << " is present in given Linked list at node -> " << ans.second << endl;
    }
    else
    {
        cout << t << " is not present in given Linked list" << endl;
    }
}
