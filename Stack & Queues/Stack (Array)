#include <bits/stdc++.h>

using namespace std;

class Stack
{
    int size;
    int *arr;
    int top;

public:
    // Default constructor
    Stack()
    {
        top = -1;
        size = 1000;
        arr = new int[size];
    }

    Stack(int s)
    {

        top = -1;
        size = s;
        arr = new int[size];
    }

    // to insert elements
    void push()
    {
        if (top >= size - 1)
        {
            cout << "STACK OVERFLOW" << endl;
        }

        else
        {
            int x;
            cout << "Enter the value to be inserted -> ";
            cin >> x;

            top++;
            arr[top] = x;
        }
    }

    // to delete elements
    void pop()
    {
        if (top <= -1)
        {
            cout << "STACK UNDERFLOW" << endl;
        }
        else
        {
            int x = arr[top];

            top--;
            cout << "Deleted element -> " << x << endl;
        }
    }

    void display()
    {
        cout << "Stack elements are :- " << endl;
        for (int i = top; i >= 0; i--)
        {
            cout << arr[i] << endl;
        }
    }

    int Top()
    {
        if (top == -1)
        {
            cout << "Empty Stack" << endl;
            return -1;
        }
        else
        {
            return arr[top];
        }
    }

    int Size()
    {
        return top + 1;
    }
};
int main()
{

    int s;
    cout << "Enter  the size of Stack -> " << endl;
    cin >> s;
    Stack s1(s);

    int a;

    do
    {
        cout << "1 -> Push" << endl;
        cout << "2 -> Pop" << endl;
        cout << "3 -> Display" << endl;
        cout << "4 -> Top" << endl;
        cout << "5 -> Exit" << endl;

        cout << "Enter the operation you want to perform -> ";
        cin >> a;

        switch (a)
        {
        case 1:
        {
            s1.push();
            break;
        }

        case 2:
        {
            s1.pop();
            break;
        }

        case 3:
        {
            s1.display();
            break;
        }

        case 4:
        {
            cout << "The Top element is -> " << s1.Top() << endl;
            break;
        }

        case 5:
        {
            break;
        }
        }
    } while (a != 5);
    return 0;
}
