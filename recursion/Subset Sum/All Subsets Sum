#include <bits/stdc++.h>

// From agiven set of numbers, we have to find the sum of all subsets

// T.C. -> O(2 ^ N log (2 N)):- two choices each time
// S.C. -> O(N)

using namespace std;
void CalculateSum(int index, vector<int> &arr, int n, vector<int> &ans, int sum)
{
    if (index == n)
    {
        ans.push_back(sum);
        return;
    }
    // pick
    CalculateSum(index + 1, arr, n, ans, sum + arr[index]);

    // non - pick
    CalculateSum(index + 1, arr, n, ans, sum);
}
vector<int> SubsetSums(vector<int> arr, int n)
{
    vector<int> ans;
    CalculateSum(0, arr, n, ans, 0);
    sort(ans.begin(), ans.end());
    return ans;
}

int main()
{
    int n, x;
    cout << "Enter the size of array -> ";
    cin >> n;
    vector<int> arr;
    cout << "Enter array elements :- ";
    for (int i = 0; i < n; i++)
    {
        cin >> x;
        arr.push_back(x);
    }

    vector<int> ans = SubsetSums(arr, arr.size());
    sort(ans.begin(), ans.end());
    cout << "The sum of each subset is -> " << endl;
    for (auto sum : ans)
    {
        cout << sum << " ";
    }
    cout << endl;

    return 0;
}
